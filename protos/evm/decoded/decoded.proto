syntax = "proto3";

package sh.coherent.blockchain.evm.decoded;
option go_package = "github.com/datadaodevs/evm-etl/protos/go/evm/decoded";

import "google/protobuf/timestamp.proto";

message Block {
  string base_fee_per_gas = 1; // decimal string
  string difficulty = 2; // decimal string
  string extra_data = 3; // decimal string
  string gas_limit = 4; // decimal string
  string gas_used = 5; // decimal string
  string hash = 6;
  string logs_bloom = 7;
  string miner = 8;
  string mix_hash = 9;
  string nonce = 10;
  int64 number = 11;
  string parent_hash = 12;
  string receipt_root = 13;
  string sha3_uncles = 14;
  string state_root = 15;
  google.protobuf.Timestamp timestamp = 16;
  repeated Transaction transactions = 17;
  string transactions_root = 18;
  repeated string uncles = 19;
  int64 total_difficulty = 20;
  int64 size = 21;
}

message CallTrace {
  string type = 1;
  string from = 2;
  string to = 3;
  string value = 4; // hex string
  string gas = 5; // hex string
  string gas_used = 6; // hex string
  string input = 7;
  string output = 8;
  repeated CallTrace calls = 9;
}

message Transaction {
  string block_hash = 1;
  int64 block_number = 2; // hex string
  string from = 3;
  int64 gas = 4; // in gwei
  int64 gas_price = 5; // in gwei
  string hash = 6;
  Input input = 7;
  int64 max_fee_per_gas = 8; // in gwei
  int64 max_priority_fee_per_gas = 9; // in gwei
  int64 nonce = 10;
  string r = 11;
  string s = 12;
  string to = 13;
  int64 type = 14;
  string v = 15;
  int64 value = 16; // in gwei
  repeated Access access_list = 17;
  int64 chain_id = 18;

  // added fields
  float fee = 19; // in ETH
  bool successful = 20;
  bool is_transfer = 21;
}

message Access {
  string address = 1;
  repeated string storage_keys = 2;
}

message Input {
  string function = 1;
  string method_id = 2;
  repeated Param args = 3;
}

message Param {
  string name = 1;
  string type = 2;
  string data = 3;
}

message TransactionReceipt {
  string block_hash = 1;
  int64 block_number = 2;
  string contract_address = 3;
  int64 cumulative_gas_used = 4;
  int64 effective_gas_price = 5;
  string from = 6;
  int64 gas_used = 7;
  repeated Log logs = 8;
  string logs_bloom = 9;
  int64 status = 10;
  string to = 11;
  string transaction_hash = 12;
  string transaction_index = 13;
  int64 type = 14;
  string root = 15;
}

message Log {
  string address = 1;
  Topic topics = 2;
  repeated LogParams data = 3; // if event fragment is not available
  int64 block_number = 4;
  string transaction_hash = 5;
  int64 transaction_index = 6;
  string block_hash = 7;
  int64 log_index = 8;
  bool removed = 9;
}

message Topic {
  string signature = 1; // etc Transfer (index_topic_1 address from, index_topic_2 address to, uint256 value)
  repeated LogParams indexed_params = 2;
  string event_id = 3; // keccak256 of event signature
}

message LogParams {
  string name = 1;
  string type = 2;
  string value = 3;
}

message Data {
  Block block = 1;
  repeated TransactionReceipt transaction_receipt = 2;
  repeated CallTrace call_trace = 3;
}
